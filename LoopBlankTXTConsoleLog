package ConsoleLog;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.util.logging.Level;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.logging.LogEntries;
import org.openqa.selenium.logging.LogEntry;
import org.openqa.selenium.logging.LogType;
import org.openqa.selenium.logging.LoggingPreferences;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;

public class LoopThruALLBLANKTXTFULL {

	 private WebDriver driver;


	    @BeforeMethod
	    public void setUp() {
	        System.setProperty("webdriver.chrome.driver", "c:\\tmp\\chromedriver.exe");        
	        DesiredCapabilities caps = DesiredCapabilities.chrome();
	        LoggingPreferences logPrefs = new LoggingPreferences();
	        logPrefs.enable(LogType.BROWSER, Level.ALL);
	        caps.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);
	       	driver = new ChromeDriver(caps);
 
	        
	    }

	    @AfterMethod
	    public void tearDown() {
	        driver.quit();
	    }

	    public void analyzeLog() {
	    	int w=0;
	        LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);

for (LogEntry entry : logEntries) 
{ 
System.out.print(".");
 	

		if (!entry.getMessage().contains("adobedtm") && !entry.getMessage().contains("google-analytics"))
		       {
		    	     System.out.println();
		        	 System.out.print(driver.getCurrentUrl()+" >>> ");
		        	 System.out.println(entry.getLevel() + " " + entry.getMessage());
		        	 w=w+1;
		        	 
		       }
 	 
		
}
	        
	        // not to stop on every program if it fails use softasert
	        SoftAssert ass = new SoftAssert();
	        ass.assertTrue(w==0);
	    }

	    @Test
	    public void testMethod() throws  Exception {
	     
		
	 try (BufferedReader br = new BufferedReader(new FileReader("C://tmp//lines.txt"))) 
	    {

	    		String line;
	    		while ((line = br.readLine()) != null) 
	    		{
	    		driver.get(line);
				analyzeLog();
				}
						
	    	System.out.println();
	        System.out.println("===================DOESNT MATTER AFTER THIS LINE=====================");
	    }
	 catch (Exception e) {System.out.println(e.getMessage());}
	}
}
